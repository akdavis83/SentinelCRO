
lottie-player {
  width: 400px;
  margin: auto;
}
nav{
  --_nav-trans-speed: 300ms;
  
  --_nav-txt-clr: rgba(255 255 255 / .9);
  --_nav-txt-clr-hover: rgba(255 255 255 / 1);
  --_nav-bg-clr: transparent;
  --_nav-bg-clr-hover: rgba(255 255 255 / .15);
  --_nav-border-clr: rgba(255 255 255 / .25);
  --_nav-border-clr-hover: rgba(255 255 255 / .25);
  --_nav-gap: .5rem;
  
  --_nav-indicator-width: 0px;
  --_nav-indicator-clr: var(--clr-secondary);
  --_nav-indicator-opacity: 1;
  --_nav-indicator-left: 0;
  --_nav-indicator-right: 0;
  --_nav-indicator-top: 0;
  --_nav-indicator-bottom: 0;
  
  display: flex;
  flex-direction: column;
  gap: var(--_nav-gap);
  position: relative;
}
@media (min-width: 600px){
  nav{
    flex-direction: row;  
  }
}
nav::after{
  content: '';
  position: absolute;
  top: var(--_nav-indicator-top);
  bottom: var(--_nav-indicator-bottom);
  left: var(--_nav-indicator-left);
  right: var(--_nav-indicator-right);
  z-index: -1;
  width: auto;
  height: auto;
  border-radius: 5px;
  transition: left,right,top, bottom, opacity;
  transition-duration: var(--_nav-trans-speed);
  transition-timing-function: ease-in-out;
  background-color: var(--_nav-indicator-clr);
  translate: var(--_nav-indicator-x, 0);
  opacity: var(--_nav-indicator-opacity, 1);
}

nav > a{
  position: relative;
  cursor: pointer;
  text-decoration: none;
  font-size: 0.9rem;
  font-weight: 300;
  color: var(--_nav-txt-clr);
  background-color: transparent;
  border: 1px solid var(--_nav-border-clr);
  outline: none;  
  border-radius: 5px;
  padding: .5rem .75rem;
  display: flex;
  align-items: center;
  gap: .25rem;
/*  mix-blend-mode: luminosity;*/
  
  /* hide indicator when "outside" of buttons - this is not an ideal solution as it won't maintain the background. Ideally it needs to be done with some sort of mask :thinking:*/
box-shadow: 0 0 0 var(--_nav-gap) var(--clr-bg);
  
}
nav > a::before{
  content: '';
  position: absolute;
  inset: 0;
  border-radius: inherit;
  background-color: var(--_nav-bg-clr);
  z-index: -1;
  transition: background-color var(--_nav-trans-speed) ease-in-out;
}


nav > a:focus-visible,  
nav > a:hover{
  --_nav-txt-clr: var(--_nav-txt-clr-hover);
  --_nav-bg-clr: var(--_nav-bg-clr-hover);
  --_nav-border-clr: var(--_nav-border-clr-hover);
}
nav svg{
  width: 18px;
}


/* general styling not relevant for this demo */
*,
::before,
::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
:root {
  --clr-bg: #222;
  --clr-primary: #f5f5f5;
  --clr-secondary: #075985; 
}

html {
  background-color: var(--clr-bg);
  font-family: system-ui;
  font-family: system-ui;
}

body {
  min-height: 100svh;
  display: grid;
  place-content: center;
  gap: 1.5rem;
  /*font-size: clamp(0.9rem, 2.5vw,1.4rem);*/
  color: var(--clr-primary);
  padding: 1rem;
  background-image: radial-gradient(circle, rgba(175, 208, 84, .25) 1px, rgba(0, 0, 0, 0) 1px);
  background-size: 40px 40px;
  font: 25px serif;
}

body::after {
  content: "";
  position: fixed;
  top: 1rem;
  left: 1rem;
  width: 32px;
  height: 32px;
  background-size: cover;
  
}
h1 {
  font-size: clamp(1rem, 2.5vw + 0.25rem, 1.2rem);
  font-weight: 500;
  line-height: 1.6;
}

.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}
.unlock-regular {
  font-family: "Unlock", serif;
  font-weight: 400;
  font-style: normal;
}
canvas {
  position: fixed;
  inset: 0;
  width: 100%;
  height: 100%;
}